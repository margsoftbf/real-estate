services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: real-estate-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: real_estate
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - real-estate-network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: real-estate-backend
    restart: unless-stopped
    ports:
      - '3001:3000'
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/real_estate
      JWT_SECRET: your-jwt-secret-here
      PORT: 3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
    networks:
      - real-estate-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: real-estate-frontend
    restart: unless-stopped
    ports:
      - '3000:3000'
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:3001
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: your-nextauth-secret-here
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - real-estate-network

  # Redis (for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: real-estate-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - real-estate-network

networks:
  real-estate-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
